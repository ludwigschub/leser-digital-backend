datasource db {
  provider = "postgresql" // Change this to your database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

model User {
  id                 Int               @id @default(autoincrement())
  name               String
  email              String            @unique
  password           String
  role               Role              @default(USER)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  codeId             Int?
  code               VerificationCode? @relation()
  verified           Boolean           @default(false)
  resetPasswordToken String?
  accessToken        String?
  refreshToken       String[]          @default([])
  articleActivity    ArticleActivity[]
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  code      String
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model Source {
  id        Int       @id @default(autoincrement())
  key       String    @unique
  name      String
  logo      String
  banner    String
  feeds     String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
  editors   Editor[]
}

model Editor {
  id        Int       @id @default(autoincrement())
  name      String
  sourceId  Int
  source    Source    @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  articles  Article[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Article {
  id          Int               @id @default(autoincrement())
  title       String
  description String?
  content     String?
  url         String
  image       String?
  category    ArticleCategory
  premium     Boolean           @default(false)
  recommended Boolean           @default(false)
  short       Boolean           @default(false)
  sourceId    Int
  source      Source            @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  editors     Editor[]
  uploadedAt  DateTime
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  activity    ArticleActivity[]
}

enum ArticleCategory {
  TECHNOLOGY
  SCIENCE
  HEALTH
  BUSINESS
  ENTERTAINMENT
  SPORTS
  POLITICS
  CULTURE
  ENVIRONMENT
  RELIGION
  EDUCATION
  BREAKING
  GAMING
  TRAVEL
  ART
  PSYCHOLOGY
  HISTORY
  FOOD
  FASHION
  PUZZLE
  WEATHER
  UNKNOWN
}

enum ArticleActivityType {
  VIEW_ARTICLE
  SAVE_ARTICLE
}

model ArticleActivity {
  id        Int                 @id @default(autoincrement())
  type      ArticleActivityType
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  userId    Int
  user      User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  articleId Int
  article   Article             @relation(fields: [articleId], references: [id], onDelete: Cascade)
}
